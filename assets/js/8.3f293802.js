(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{194:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"join-the-mainnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join-the-mainnet","aria-hidden":"true"}},[e._v("#")]),e._v(" Join the mainnet")]),e._v(" "),a("blockquote",[a("p",[e._v("See the "),a("a",{attrs:{href:"https://github.com/commercionetwork/chains",target:"_blank",rel:"noopener noreferrer"}},[e._v("chains repo"),a("OutboundLink")],1),e._v(" for information on the mainnet, including the\ndetails about the genesis file.")])]),e._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[e._v("Please make you you have "),a("router-link",{attrs:{to:"/installation.html"}},[e._v("installed commercio.network")]),e._v(" before you go further.")],1)]),e._v(" "),a("h2",{attrs:{id:"setting-up-a-new-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-new-node","aria-hidden":"true"}},[e._v("#")]),e._v(" Setting up a new node")]),e._v(" "),a("p",[e._v("These instructions are for setting up a brand new full node from scratch.")]),e._v(" "),a("p",[e._v("First, initialize the node and create the necessary config file:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cnd init "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your_custom_moniker"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("blockquote",[a("p",[e._v("Note. Monikers can contains only ASCII characters. Using Unicode characters will render your node unreachable.")])]),e._v(" "),a("p",[e._v("You can edit this "),a("code",[e._v("moniker")]),e._v(" later, in the "),a("code",[e._v("~/.cnd/config/config.toml")]),e._v(" file:")]),e._v(" "),a("div",{staticClass:"language-toml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A custom human readable name for this node")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[e._v("moniker")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<your_custom_moniker>"')]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("You can edit the "),a("code",[e._v("~/.cnd/config/cnd.toml")]),e._v(" file in order to enable the anti spam mechanism and reject incoming\ntransactions with less than the minimum gas prices:")]),e._v(" "),a("div",{staticClass:"language-toml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This is a TOML config file.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# For more information, see https://github.com/toml-lang/toml")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##### main base config options #####")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The minimum gas prices a validator is willing to accept for processing a")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# transaction. A transaction's fees must meet the minimum of any denomination")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# specified in this config (e.g. 10uatom).")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[e._v("minimum-gas-prices")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("You full-node has been initialized!")]),e._v(" "),a("h2",{attrs:{id:"genesis-seeds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#genesis-seeds","aria-hidden":"true"}},[e._v("#")]),e._v(" Genesis & Seeds")]),e._v(" "),a("h3",{attrs:{id:"copy-the-genesis-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy-the-genesis-file","aria-hidden":"true"}},[e._v("#")]),e._v(" Copy the Genesis File")]),e._v(" "),a("p",[e._v("Fetch the mainnet's "),a("code",[e._v("genesis.json")]),e._v(" file into the "),a("code",[e._v("cnd")]),e._v("'s config directory.")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -p "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$HOME")]),e._v("/.cnd/config\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" https://raw.githubusercontent.com/Commercionetwork/Chains/master/latest/genesis.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$HOME")]),e._v("/.cnd/config/genesis.json\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("Note that we use the "),a("code",[e._v("latest")]),e._v(" directory inside the "),a("a",{attrs:{href:"https://github.com/commercionetwork/chains",target:"_blank",rel:"noopener noreferrer"}},[e._v("chains repo"),a("OutboundLink")],1),e._v(" which\ncontains details for the mainnet like the latest version and genesis file.")]),e._v(" "),a("blockquote",[a("p",[e._v("If you want to connect to the public testnet instead, click "),a("router-link",{attrs:{to:"/join-testnet.html"}},[e._v("here")]),e._v(".")],1)]),e._v(" "),a("p",[e._v("To verify the correctness of the configuration run:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cnd start\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"add-seed-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-seed-nodes","aria-hidden":"true"}},[e._v("#")]),e._v(" Add Seed Nodes")]),e._v(" "),a("p",[e._v("Your node needs to know how to find peers. You'll need to add healthy seed nodes to "),a("code",[e._v("$HOME/.cnd/config/config.toml")]),e._v(".\nThe "),a("a",{attrs:{href:"https://github.com/commercionetwork/chains",target:"_blank",rel:"noopener noreferrer"}},[e._v("chains repo"),a("OutboundLink")],1),e._v(" contains the links to some seed nodes.")]),e._v(" "),a("p",[e._v("If those seeds aren't working, you can ask for peers on the "),a("a",{attrs:{href:"https://t.me/CommercioNetwork",target:"_blank",rel:"noopener noreferrer"}},[e._v("Commercio.network Telegram Group"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("For more information on seeds and peers, you can "),a("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/develop/docs/tendermint-core/using-tendermint.md#peers",target:"_blank",rel:"noopener noreferrer"}},[e._v("read this"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"a-note-on-gas-and-fees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-note-on-gas-and-fees","aria-hidden":"true"}},[e._v("#")]),e._v(" A Note on Gas and Fees")]),e._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[e._v("On Commercio.network mainnet, the accepted denom is ucommercio, where 1commercio = 1.000.000ucommercio")])]),e._v(" "),a("p",[e._v("Transactions on the Cosmos Hub network need to include a transaction fee in order to be processed.\nThis fee pays for the gas required to run the transaction. The formula is the following:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("fees = ceil(gas * gasPrices)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("The "),a("code",[e._v("gas")]),e._v(" is dependent on the transaction. Different transaction require different amount of gas.\nThe "),a("code",[e._v("gas")]),e._v(" amount for a transaction is calculated as it is being processed, but there is a way to estimate it beforehand\nby using the "),a("code",[e._v("auto")]),e._v(" value for the "),a("code",[e._v("gas")]),e._v(" flag. Of course, this only gives an estimate. You can adjust this estimate with the\nflag "),a("code",[e._v("--gas-adjustment")]),e._v(" (default "),a("code",[e._v("1.0")]),e._v(") if you want to be sure you provide enough "),a("code",[e._v("gas")]),e._v(" for the transaction.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("gasPrice")]),e._v(" is the price of each unit of gas. Each validator sets a "),a("code",[e._v("min-gas-price")]),e._v(" value, and will only include\ntransactions that have a "),a("code",[e._v("gasPrice")]),e._v(" greater than their "),a("code",[e._v("min-gas-price")]),e._v(".")]),e._v(" "),a("p",[e._v("The transaction "),a("code",[e._v("fees")]),e._v(" are the product of "),a("code",[e._v("gas")]),e._v(" and "),a("code",[e._v("gasPrice")]),e._v(". As a user, you have to input 2 out of 3.\nThe higher the "),a("code",[e._v("gasPrice/fees")]),e._v(", the higher the chance that your transaction will get included in a block.")]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[e._v("For the mainnet, the recommended gas-prices is "),a("code",[e._v("0.025ucommercio")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"set-minimum-gas-prices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-minimum-gas-prices","aria-hidden":"true"}},[e._v("#")]),e._v(" Set "),a("code",[e._v("minimum-gas-prices")])]),e._v(" "),a("p",[e._v("Your full-node keeps unconfirmed transactions in its mempool. In order to protect it from spam, it is better to set a\n"),a("code",[e._v("minimum-gas-prices")]),e._v(" that the transaction must meet in order to be accepted in your node's mempool.\nThis parameter can be set inside "),a("code",[e._v("~/.cnd/config/gaiad.toml")]),e._v(".")]),e._v(" "),a("p",[e._v("The initial recommended "),a("code",[e._v("min-gas-prices")]),e._v(" is "),a("code",[e._v("0.025ucommercio")]),e._v(", but you might want to change it later.")]),e._v(" "),a("h2",{attrs:{id:"run-a-full-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-a-full-node","aria-hidden":"true"}},[e._v("#")]),e._v(" Run a full node")]),e._v(" "),a("p",[e._v("Start the full node with this command:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cnd start\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Check that everything is running smoothly:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cncli status\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("View the status of the network with the "),a("a",{attrs:{href:"https://explorer.commercio.network",target:"_blank",rel:"noopener noreferrer"}},[e._v("Commercio.network Explorer"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"export-the-current-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#export-the-current-state","aria-hidden":"true"}},[e._v("#")]),e._v(" Export the current state")]),e._v(" "),a("p",[e._v("Gaia can dump the entire application state to a JSON file, which could be useful for manual analysis and can also\nbe used as the genesis file of a new network.")]),e._v(" "),a("p",[e._v("Export the state with:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cnd "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(".json\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("You can also export the state from a particular height (at the end of processing the block of that height):")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cnd "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("export")]),e._v(" --height "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(".json\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("If you plan to start a new network from the exported state, export with the "),a("code",[e._v("--for-zero-height")]),e._v(" flag:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cnd "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("export")]),e._v(" --height "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" --for-zero-height "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(".json\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"verify-the-mainnet-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-the-mainnet-state","aria-hidden":"true"}},[e._v("#")]),e._v(" Verify the mainnet state")]),e._v(" "),a("p",[e._v("Verifying the mainnet state helps to prevent a catastrophe by running invariants on each block on your full node.\nIn essence, by running invariants you ensure that the state of mainnet is the correct expected state.\nOne vital invariant check is that no atoms are being created or destroyed outside of expected protocol, however there\nare many other invariant checks each unique to their respective module.\nBecause invariant checks are computationally expensive, they are not enabled by default.\nTo run a node with these checks start your node with the "),a("code",[e._v("assert-invariants-blockly")]),e._v(" flag:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("cnd start --assert-invariants-blockly\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("If an invariant is broken on your node, your node will panic and prompt you to send a transaction which will halt\nmainnet. For example the provided message may look like:")]),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("invariant broken:\n    loose token invariance:\n        pool.NotBondedTokens: 100\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sum")]),e._v(" of account tokens: 101\n    CRITICAL please submit the following transaction:\n        gaiacli tx crisis invariant-broken staking supply\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("When submitting a invariant-broken transaction, transaction fee tokens are not deducted as the blockchain will halt\n(aka. this is a free transaction).")]),e._v(" "),a("h2",{attrs:{id:"upgrade-to-validator-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-to-validator-node","aria-hidden":"true"}},[e._v("#")]),e._v(" Upgrade to Validator Node")]),e._v(" "),a("p",[e._v("You now have an active full node. What's the next step? You can upgrade your full node to become a\nCommercio.network Validator.\nThe top 100 validators have the ability to propose new blocks to Commercio.network.\nContinue onto the "),a("router-link",{attrs:{to:"/validator-setup.html"}},[e._v("Validator Setup")]),e._v(".")],1)])},[],!1,null,null,null);t.default=s.exports}}]);